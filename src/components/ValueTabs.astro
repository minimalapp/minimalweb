---
export interface BenefitItem {
  icon: string;
  title: string;
  description: string;
}

export interface Props {
  title: string;
  tabs: {
    businessOwners: string;
    marketing: string;
    developers: string;
    endUsers: string;
  };
  businessOwners: BenefitItem[];
  marketing: BenefitItem[];
  developers: BenefitItem[];
  endUsers: BenefitItem[];
  locale: string;
}

const { title, tabs, businessOwners, marketing, developers, endUsers, locale } = Astro.props;
---

<section class="value-section" id="beneficios">
  <div class="container">
    <h2 class="section-title">{title}</h2>
    <div class="tabs-wrapper">
      <div class="tab-buttons">
        <button class="tab-button active" data-tab="businessOwners">
          {tabs.businessOwners}
        </button>
        <button class="tab-button" data-tab="marketing">
          {tabs.marketing}
        </button>
        <button class="tab-button" data-tab="developers">
          {tabs.developers}
        </button>
        <button class="tab-button" data-tab="endUsers">
          {tabs.endUsers}
        </button>
      </div>
      <div class="tab-content">
        <div class="benefit-list">
          {businessOwners.map((item) => (
            <div class="benefit-item">
              <div class="benefit-icon">{item.icon}</div>
              <div>
                <h4>{item.title}</h4>
                <p>{item.description}</p>
              </div>
            </div>
          ))}
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  // Store all benefit content data
  const benefitContents = {
    businessOwners: JSON.parse(document.getElementById('businessOwners-data')?.textContent || '[]'),
    marketing: JSON.parse(document.getElementById('marketing-data')?.textContent || '[]'),
    developers: JSON.parse(document.getElementById('developers-data')?.textContent || '[]'),
    endUsers: JSON.parse(document.getElementById('endUsers-data')?.textContent || '[]')
  };

  // Tab switching functionality
  const tabButtons = document.querySelectorAll('.tab-button');
  const benefitList = document.querySelector('.benefit-list');

  tabButtons.forEach(button => {
    button.addEventListener('click', function() {
      // Remove active from all buttons
      tabButtons.forEach(btn => btn.classList.remove('active'));

      // Add active to clicked button
      this.classList.add('active');

      // Get the tab key
      const tabKey = this.getAttribute('data-tab') as keyof typeof benefitContents;
      const content = benefitContents[tabKey];

      // Update benefit list with fade animation
      if (benefitList && content) {
        // Trigger fade out by removing animation
        benefitList.style.animation = 'none';

        // Force reflow
        void benefitList.offsetWidth;

        // Update content
        benefitList.innerHTML = content.map((item: any) => `
          <div class="benefit-item">
            <div class="benefit-icon">${item.icon}</div>
            <div>
              <h4>${item.title}</h4>
              <p>${item.description}</p>
            </div>
          </div>
        `).join('');

        // Trigger fade in
        benefitList.style.animation = 'fadeIn 0.4s ease-out';
      }
    });
  });
</script>

<!-- Hidden data for client-side script -->
<script id="businessOwners-data" type="application/json" set:html={JSON.stringify(businessOwners)}></script>
<script id="marketing-data" type="application/json" set:html={JSON.stringify(marketing)}></script>
<script id="developers-data" type="application/json" set:html={JSON.stringify(developers)}></script>
<script id="endUsers-data" type="application/json" set:html={JSON.stringify(endUsers)}></script>

<style>
  .value-section {
    padding: var(--section-padding-y) var(--section-padding-left) var(--section-padding-y) var(--section-padding-right);
    background: var(--bg-primary); /* Changed from #f7fafc */
  }

  .section-title {
    text-align: center;
    margin-bottom: var(--space-6); /* Changed from 3rem to 48px */
    font-size: clamp(var(--font-size-3xl), 4vw, var(--font-size-4xl));
    color: var(--text-primary);
  }

  .tabs-wrapper {
    max-width: 1000px;
    margin: 0 auto;
  }

  .tab-buttons {
    display: flex;
    flex-wrap: wrap;
    gap: var(--space-2); /* Changed from 1rem to 16px */
    justify-content: center;
    margin-bottom: var(--space-4); /* Changed from 3rem to 32px */
  }

  .tab-button {
    padding: 14px 28px; /* Increased from 0.75rem 1.5rem */
    border: none; /* Removed border */
    border-bottom: 3px solid transparent; /* Added for active state */
    background: var(--bg-secondary); /* Changed from white */
    border-radius: var(--radius-sm); /* Changed from 25px to 8px */
    cursor: pointer;
    transition: all var(--transition-base);
    font-size: var(--font-size-base);
    font-weight: var(--font-weight-medium);
    color: var(--text-secondary);
    opacity: 0.7; /* Inactive state opacity */
    position: relative;
  }

  .tab-button:hover {
    background: var(--bg-tertiary); /* Changed from #f8f9fa */
    opacity: 0.9; /* Slightly more visible on hover */
  }

  .tab-button.active {
    background: var(--bg-primary); /* Changed from gradient */
    color: var(--brand-purple-primary); /* Changed to purple text */
    opacity: 1; /* Full opacity when active */
    border-bottom-color: var(--brand-purple-primary); /* 3px purple underline */
    font-weight: var(--font-weight-semibold); /* Bolder when active */
  }

  .tab-button:focus-visible {
    outline: 2px solid var(--brand-purple-primary);
    outline-offset: 2px;
  }

  .tab-content {
    padding-top: var(--space-3); /* Added 20px+ top padding */
  }

  .benefit-list {
    display: grid;
    grid-template-columns: 1fr;
    gap: var(--space-4); /* Changed from 2rem to 32px */
    opacity: 1;
    animation: fadeIn 0.4s ease-out; /* Added fade animation */
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .benefit-item {
    display: flex;
    gap: var(--space-3); /* Changed from 1.5rem to 24px */
    align-items: flex-start;
    padding: var(--space-4); /* Changed from 1.5rem to 32px */
    background: var(--bg-tertiary); /* Changed from white */
    border-radius: var(--radius-md); /* Consistent 12px */
    box-shadow: var(--shadow-sm);
    transition: transform var(--transition-base), box-shadow var(--transition-base);
    border: 1px solid rgba(0, 0, 0, 0.04); /* Subtle border */
  }

  .benefit-item:hover {
    transform: translateY(-2px); /* Reduced from -4px */
    box-shadow: var(--shadow-md); /* Increased shadow */
  }

  .benefit-icon {
    font-size: 1.5rem; /* Reduced by ~15% from 2rem */
    flex-shrink: 0;
    width: 42px; /* Reduced by ~15% from 50px */
    height: 42px;
    display: flex;
    align-items: center;
    justify-content: center;
    background: rgba(99, 102, 241, 0.08); /* Brand purple instead of blue */
    border-radius: var(--radius-sm); /* Consistent 8px */
    color: var(--brand-purple-primary); /* Purple checkmark */
    font-weight: var(--font-weight-bold);
  }

  .benefit-item h4 {
    margin: 0 0 var(--space-1) 0; /* Changed from 0.5rem to 8px */
    font-size: var(--font-size-xl); /* Increased from 1.25rem */
    color: var(--text-primary);
    font-weight: var(--font-weight-semibold); /* Changed to 600 */
  }

  .benefit-item p {
    margin: 0;
    color: var(--text-tertiary); /* Darkened from var(--text-light) */
    line-height: var(--line-height-relaxed); /* 1.6 */
    font-size: 15px; /* Slightly increased */
  }

  @media (min-width: 768px) {
    .benefit-list {
      grid-template-columns: repeat(2, 1fr);
    }
  }
</style>
