---
import type { Locale } from '@/i18n/utils';

export interface BenefitItem {
  icon: string;
  title: string;
  description: string;
}

export interface Props {
  title: string;
  tabs: {
    businessOwners: string;
    marketing: string;
    developers: string;
    endUsers: string;
  };
  businessOwners: BenefitItem[];
  marketing: BenefitItem[];
  developers: BenefitItem[];
  endUsers: BenefitItem[];
  locale: Locale;
}

const { title, tabs, businessOwners, marketing, developers, endUsers, locale } = Astro.props;
---

<section class="py-12 md:py-14 px-4 md:px-6 lg:px-8 bg-bg-primary" id={locale === 'es' ? 'beneficios' : 'benefits'}>
  <div class="max-w-content mx-auto">
    <h2 class="text-center mb-6 text-3xl md:text-4xl text-text-primary font-bold">{title}</h2>
    <div class="max-w-[1000px] mx-auto">
      <div class="flex flex-wrap gap-2 justify-center mb-4">
        <button class="tab-button active px-7 py-3.5 bg-bg-secondary rounded-sm cursor-pointer transition-all duration-base text-base font-medium text-text-secondary opacity-70 relative border-b-[3px] border-transparent hover:bg-bg-tertiary hover:opacity-90 focus-visible:outline-2 focus-visible:outline-brand-purple-primary focus-visible:outline-offset-2" data-tab="businessOwners">
          {tabs.businessOwners}
        </button>
        <button class="tab-button px-7 py-3.5 bg-bg-secondary rounded-sm cursor-pointer transition-all duration-base text-base font-medium text-text-secondary opacity-70 relative border-b-[3px] border-transparent hover:bg-bg-tertiary hover:opacity-90 focus-visible:outline-2 focus-visible:outline-brand-purple-primary focus-visible:outline-offset-2" data-tab="marketing">
          {tabs.marketing}
        </button>
        <button class="tab-button px-7 py-3.5 bg-bg-secondary rounded-sm cursor-pointer transition-all duration-base text-base font-medium text-text-secondary opacity-70 relative border-b-[3px] border-transparent hover:bg-bg-tertiary hover:opacity-90 focus-visible:outline-2 focus-visible:outline-brand-purple-primary focus-visible:outline-offset-2" data-tab="developers">
          {tabs.developers}
        </button>
        <button class="tab-button px-7 py-3.5 bg-bg-secondary rounded-sm cursor-pointer transition-all duration-base text-base font-medium text-text-secondary opacity-70 relative border-b-[3px] border-transparent hover:bg-bg-tertiary hover:opacity-90 focus-visible:outline-2 focus-visible:outline-brand-purple-primary focus-visible:outline-offset-2" data-tab="endUsers">
          {tabs.endUsers}
        </button>
      </div>
      <div class="pt-3">
        <div class="benefit-list grid grid-cols-1 md:grid-cols-2 gap-4 opacity-100">
          {businessOwners.map((item) => (
            <div class="flex gap-3 items-start p-4 bg-bg-tertiary rounded-md shadow-sm transition-all duration-base border border-black/[0.04] hover:-translate-y-0.5 hover:shadow-md">
              <div class="text-2xl flex-shrink-0 w-[42px] h-[42px] flex items-center justify-center bg-brand-purple-primary/8 rounded-sm text-brand-purple-primary font-bold">
                {item.icon}
              </div>
              <div>
                <h4 class="m-0 mb-1 text-xl text-text-primary font-semibold">{item.title}</h4>
                <p class="m-0 text-text-tertiary leading-relaxed text-[15px]">{item.description}</p>
              </div>
            </div>
          ))}
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  // Store all benefit content data
  const benefitContents = {
    businessOwners: JSON.parse(document.getElementById('businessOwners-data')?.textContent || '[]'),
    marketing: JSON.parse(document.getElementById('marketing-data')?.textContent || '[]'),
    developers: JSON.parse(document.getElementById('developers-data')?.textContent || '[]'),
    endUsers: JSON.parse(document.getElementById('endUsers-data')?.textContent || '[]')
  };

  // Tab switching functionality
  const tabButtons = document.querySelectorAll('.tab-button');
  const benefitList = document.querySelector('.benefit-list');

  tabButtons.forEach(button => {
    button.addEventListener('click', function(this: HTMLButtonElement) {
      // Remove active from all buttons
      tabButtons.forEach(btn => btn.classList.remove('active'));

      // Add active to clicked button
      this.classList.add('active');

      // Get the tab key
      const tabKey = this.getAttribute('data-tab') as keyof typeof benefitContents;
      const content = benefitContents[tabKey];

      // Update benefit list with fade animation
      if (benefitList && content) {
        const listElement = benefitList as HTMLElement;

        // Trigger fade out by removing animation
        listElement.style.animation = 'none';

        // Force reflow
        void listElement.offsetWidth;

        // Update content
        listElement.innerHTML = content.map((item: any) => `
          <div class="flex gap-3 items-start p-4 bg-bg-tertiary rounded-md shadow-sm transition-all duration-base border border-black/[0.04] hover:-translate-y-0.5 hover:shadow-md">
            <div class="text-2xl flex-shrink-0 w-[42px] h-[42px] flex items-center justify-center bg-brand-purple-primary/8 rounded-sm text-brand-purple-primary font-bold">
              ${item.icon}
            </div>
            <div>
              <h4 class="m-0 mb-1 text-xl text-text-primary font-semibold">${item.title}</h4>
              <p class="m-0 text-text-tertiary leading-relaxed text-[15px]">${item.description}</p>
            </div>
          </div>
        `).join('');

        // Trigger fade in
        listElement.style.animation = 'fadeIn 0.4s ease-out';
      }
    });
  });
</script>

<!-- Hidden data for client-side script -->
<script id="businessOwners-data" type="application/json" is:inline set:html={JSON.stringify(businessOwners)}></script>
<script id="marketing-data" type="application/json" is:inline set:html={JSON.stringify(marketing)}></script>
<script id="developers-data" type="application/json" is:inline set:html={JSON.stringify(developers)}></script>
<script id="endUsers-data" type="application/json" is:inline set:html={JSON.stringify(endUsers)}></script>

<style>
  /* Tab active state styles - keep in scoped CSS for specificity */
  .tab-button.active {
    background: var(--bg-primary);
    color: var(--brand-purple-primary);
    opacity: 1;
    border-bottom-color: var(--brand-purple-primary);
    font-weight: var(--font-weight-semibold);
  }

  /* Fade animation - keep in scoped CSS */
  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .benefit-list {
    animation: fadeIn 0.4s ease-out;
  }
</style>
