---
import Badge from './Badge.astro';
import Button from './Button.astro';

interface Props {
  title: string;
  category: string;
  categoryColor?: string;
  location: string;
  type: string;
  description: string;
  requirements: string[];
  buttonHref: string;
  buttonText?: string;
  className?: string;
}

const {
  title,
  category,
  categoryColor = 'success',
  location,
  type,
  description,
  requirements,
  buttonHref,
  buttonText = 'Apply Now',
  className = ''
} = Astro.props;
---

<div class={`bg-[var(--bg-tertiary)] border border-[var(--border-primary)] rounded-xl p-6 lg:p-8 shadow-sm transition-all duration-200 hover:-translate-y-1 hover:shadow-lg ${className}`}>
  <div class="flex flex-col md:flex-row md:items-center md:justify-between gap-4 mb-4">
    <div>
      <h3 class="text-xl lg:text-2xl text-[var(--text-primary)] font-semibold mb-3">
        {title}
      </h3>
      <div class="flex flex-wrap gap-2">
        <Badge text={category} variant={categoryColor} />
        <Badge text={location} variant="secondary" />
        <Badge text={type} variant="secondary" />
      </div>
    </div>
    <Button variant="primary" href={buttonHref}>
      {buttonText}
    </Button>
  </div>

  <p class="text-[var(--text-secondary)] leading-relaxed mb-4 text-base">
    {description}
  </p>

  <ul class="list-none pl-0 space-y-2 text-[var(--text-secondary)] text-base">
    {requirements.map(req => (
      <li class="pl-6 relative before:content-['â€¢'] before:absolute before:left-0 before:text-[var(--brand-green)] before:font-bold">
        {req}
      </li>
    ))}
  </ul>
</div>
