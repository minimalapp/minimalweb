---
interface Step {
  number: number;
  title: string;
  description: string;
  content?: string;
}

interface Props {
  steps: Step[];
  className?: string;
}

const { steps, className = '' } = Astro.props;
---

<div class={`flex flex-col gap-8 lg:gap-10 max-w-4xl mx-auto ${className}`}>
  {steps.map((step, index) => (
    <div class="flex gap-4 lg:gap-6 items-start relative">
      {/* Connector line */}
      {index < steps.length - 1 && (
        <div class="absolute left-[23px] top-[60px] w-0.5 h-[calc(100%+2rem)] bg-[var(--border-primary)]" />
      )}

      {/* Step number */}
      <div class="flex-shrink-0 w-12 h-12 lg:w-14 lg:h-14 bg-gradient-to-br from-[var(--brand-green)] to-[#059669] text-white rounded-full flex items-center justify-center text-xl lg:text-2xl font-bold shadow-md z-10">
        {step.number}
      </div>

      {/* Step content */}
      <div class="flex-1 pt-1">
        <h3 class="text-xl lg:text-2xl text-[var(--text-primary)] font-semibold mb-3">
          {step.title}
        </h3>
        <p class="text-[var(--text-secondary)] leading-relaxed text-base mb-3">
          {step.description}
        </p>
        {step.content && (
          <div class="prose prose-sm max-w-none" set:html={step.content} />
        )}
      </div>
    </div>
  ))}
</div>
