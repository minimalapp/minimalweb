---
export interface ProcessStep {
  title: string;
  description: string;
}

export interface Props {
  title: string;
  steps: ProcessStep[];
}

const { title, steps } = Astro.props;
---

<section class="process" id="como-funciona">
  <div class="container">
    <h2 class="section-title">{title}</h2>
    <div class="process-steps">
      {steps.map((step, index) => (
        <div class="process-step">
          <div class="step-number">{index + 1}</div>
          <h3>{step.title}</h3>
          <p>{step.description}</p>
        </div>
      ))}
    </div>
  </div>
</section>

<style>
  .process {
    padding: var(--section-padding-y) var(--section-padding-left) var(--section-padding-y) var(--section-padding-right);
    background: var(--bg-light);
  }

  .section-title {
    text-align: center;
    margin-bottom: 3rem;
    font-size: clamp(1.75rem, 4vw, 2.75rem);
  }

  .process-steps {
    display: grid;
    grid-template-columns: 1fr;
    gap: 3rem;
    max-width: 1000px;
    margin: 0 auto;
  }

  .process-step {
    text-align: center;
    position: relative;
  }

  .step-number {
    width: 60px;
    height: 60px;
    background: var(--gradient-primary);
    color: white;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.5rem;
    font-weight: 700;
    margin: 0 auto 1.5rem;
  }

  .process-step h3 {
    font-size: 1.5rem;
    margin-bottom: 1rem;
    color: var(--text-dark);
  }

  .process-step p {
    color: var(--text-light);
    line-height: 1.6;
  }

  @media (min-width: 768px) {
    .process-steps {
      grid-template-columns: repeat(3, 1fr);
    }
  }
</style>
