---
export interface ProblemItem {
  title: string;
  description: string;
  icon: string; // Icon identifier
}

export interface Props {
  title: string;
  items: ProblemItem[];
}

const { title, items } = Astro.props;

// SVG icon mapping
const icons = {
  'search': `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" d="m21 21-5.197-5.197m0 0A7.5 7.5 0 1 0 5.196 5.196a7.5 7.5 0 0 0 10.607 10.607Z" /></svg>`,
  'door': `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" d="M15.75 9V5.25A2.25 2.25 0 0 0 13.5 3h-6a2.25 2.25 0 0 0-2.25 2.25v13.5A2.25 2.25 0 0 0 7.5 21h6a2.25 2.25 0 0 0 2.25-2.25V15m3 0 3-3m0 0-3-3m3 3H9" /></svg>`,
  'heart': `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" d="M21 8.25c0-2.485-2.099-4.5-4.688-4.5-1.935 0-3.597 1.126-4.312 2.733-.715-1.607-2.377-2.733-4.313-2.733C5.1 3.75 3 5.765 3 8.25c0 7.22 9 12 9 12s9-4.78 9-12Z" /></svg>`,
  'chart': `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" d="M3 13.125C3 12.504 3.504 12 4.125 12h2.25c.621 0 1.125.504 1.125 1.125v6.75C7.5 20.496 6.996 21 6.375 21h-2.25A1.125 1.125 0 0 1 3 19.875v-6.75ZM9.75 8.625c0-.621.504-1.125 1.125-1.125h2.25c.621 0 1.125.504 1.125 1.125v11.25c0 .621-.504 1.125-1.125 1.125h-2.25a1.125 1.125 0 0 1-1.125-1.125V8.625ZM16.5 4.125c0-.621.504-1.125 1.125-1.125h2.25C20.496 3 21 3.504 21 4.125v15.75c0 .621-.504 1.125-1.125 1.125h-2.25a1.125 1.125 0 0 1-1.125-1.125V4.125Z" /></svg>`
};
---

<section class="problem" id="problema">
  <div class="container">
    <h2 class="section-title">{title}</h2>
    <div class="problem-grid">
      {items.map((item) => (
        <div class="problem-card">
          <div class="icon-wrapper">
            <span class="icon" set:html={icons[item.icon] || icons.search}></span>
          </div>
          <h3>{item.title}</h3>
          <p>{item.description}</p>
        </div>
      ))}
    </div>
  </div>
</section>

<style>
  .problem {
    padding: var(--section-padding-y) var(--section-padding-left) var(--section-padding-y) var(--section-padding-right);
    background: var(--bg-secondary); /* Changed from white to #F9FAFB */
  }

  .section-title {
    text-align: center;
    margin-bottom: var(--space-6); /* Increased from 3rem to 48px */
    font-size: clamp(var(--font-size-3xl), 4vw, var(--font-size-4xl));
    color: var(--text-primary);
  }

  .problem-grid {
    display: grid;
    grid-template-columns: 1fr;
    gap: var(--space-3); /* Reduced from 2rem to 24px */
    max-width: 1200px;
    margin: 0 auto;
  }

  .problem-card {
    background: var(--bg-primary);
    padding: var(--space-4); /* Standardized to 32px all sides */
    border-radius: var(--radius-md); /* Standardized to 12px */
    border: 1px solid rgba(0, 0, 0, 0.06); /* Added subtle border */
    box-shadow: var(--shadow-sm);
    transition: transform var(--transition-base), box-shadow var(--transition-base);
  }

  .problem-card:hover {
    transform: translateY(-2px); /* Reduced from -5px for subtlety */
    box-shadow: var(--shadow-md);
  }

  /* Icon styling */
  .icon-wrapper {
    margin-bottom: var(--space-2); /* 16px spacing from icon to title */
  }

  .icon {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: 48px; /* Consistent icon size */
    height: 48px;
    color: var(--brand-purple-primary);
  }

  .icon :global(svg) {
    width: 100%;
    height: 100%;
  }

  .problem-card h3 {
    font-size: calc(var(--font-size-2xl) + 2px); /* Increased by 2px */
    font-weight: var(--font-weight-semibold); /* Changed to 600 */
    margin-bottom: var(--space-2);
    color: var(--text-primary);
    line-height: var(--line-height-snug);
  }

  .problem-card p {
    font-size: 15px; /* Increased from 14px */
    color: var(--text-tertiary); /* Darkened to #4B5563 for WCAG AA */
    line-height: var(--line-height-relaxed); /* Set to 1.6 */
  }

  /* Mobile: 1 column */
  @media (min-width: 640px) {
    .problem-grid {
      grid-template-columns: repeat(2, 1fr); /* Tablet: 2 columns */
    }
  }

  @media (min-width: 1024px) {
    .problem-grid {
      grid-template-columns: repeat(4, 1fr); /* Desktop: 4 columns */
    }
  }
</style>
