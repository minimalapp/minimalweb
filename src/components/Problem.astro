---
export interface ProblemItem {
  title: string;
  description: string;
}

export interface Props {
  title: string;
  items: ProblemItem[];
}

const { title, items } = Astro.props;
---

<section class="problem" id="problema">
  <div class="container">
    <h2 class="section-title">{title}</h2>
    <div class="problem-grid">
      {items.map((item) => (
        <div class="problem-card">
          <h3 set:html={item.title}></h3>
          <p>{item.description}</p>
        </div>
      ))}
    </div>
  </div>
</section>

<style>
  .problem {
    padding: var(--section-padding-y) var(--section-padding-left) var(--section-padding-y) var(--section-padding-right);
    background: var(--bg-light);
  }

  .section-title {
    text-align: center;
    margin-bottom: 3rem;
    font-size: clamp(1.75rem, 4vw, 2.75rem);
  }

  .problem-grid {
    display: grid;
    grid-template-columns: 1fr;
    gap: 2rem;
    max-width: 1200px;
    margin: 0 auto;
  }

  .problem-card {
    background: white;
    padding: 2rem;
    border-radius: 12px;
    box-shadow: var(--shadow-sm);
    transition: transform 0.3s, box-shadow 0.3s;
  }

  .problem-card:hover {
    transform: translateY(-5px);
    box-shadow: var(--shadow-md);
  }

  .problem-card h3 {
    font-size: 1.5rem;
    margin-bottom: 1rem;
    color: var(--text-dark);
  }

  .problem-card p {
    color: var(--text-light);
    line-height: 1.6;
  }

  @media (min-width: 640px) {
    .problem-grid {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  @media (min-width: 1024px) {
    .problem-grid {
      grid-template-columns: repeat(4, 1fr);
    }
  }
</style>
