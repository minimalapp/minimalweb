---
import type { Locale } from '@/i18n/utils';
import commonTranslations from '@/i18n/common.json';

export interface Props {
  locale: Locale;
}

const { locale } = Astro.props;
const t = commonTranslations[locale];
---

<header>
  <nav>
    <div class="logo">
      <a href={locale === 'es' ? '/es' : '/'}>
        <img src="/assets/images/logo.jpeg" alt="Minimal" />
      </a>
    </div>
    <ul class="nav-links">
      <li><a href={locale === 'es' ? '#producto' : '#product'}>{t.nav.product}</a></li>
      <li><a href={locale === 'es' ? '#como-funciona' : '#how-it-works'}>{t.nav.howItWorks}</a></li>
      <li><a href={locale === 'es' ? '#beneficios' : '#benefits'}>{t.nav.benefits}</a></li>
      <li><a href={locale === 'es' ? '#casos' : '#use-cases'}>{t.nav.useCases}</a></li>
      <li><a href={locale === 'es' ? '#precios' : '#pricing'}>{t.nav.pricing}</a></li>
    </ul>
    <a href={locale === 'es' ? '#contacto' : '#contact'} class="cta-button">{t.nav.tryFree}</a>
    <button class="mobile-menu" id="mobileMenuButton">☰</button>
  </nav>
</header>

<!-- Mobile Navigation Overlay -->
<div class="mobile-nav-overlay" id="mobileNavOverlay">
  <button class="mobile-close" id="mobileCloseButton">×</button>
  <ul class="mobile-nav-links">
    <li><a href={locale === 'es' ? '#producto' : '#product'}>{t.nav.product}</a></li>
    <li><a href={locale === 'es' ? '#como-funciona' : '#how-it-works'}>{t.nav.howItWorks}</a></li>
    <li><a href={locale === 'es' ? '#beneficios' : '#benefits'}>{t.nav.benefits}</a></li>
    <li><a href={locale === 'es' ? '#casos' : '#use-cases'}>{t.nav.useCases}</a></li>
    <li><a href={locale === 'es' ? '#precios' : '#pricing'}>{t.nav.pricing}</a></li>
  </ul>
  <a href={locale === 'es' ? '#contacto' : '#contact'} class="cta-button">{t.nav.tryFree}</a>
</div>

<style>
  /* Header Component Styles */
  header {
    position: fixed;
    top: 0;
    width: 100%;
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(10px);
    z-index: 1000;
    box-shadow: 0 2px 20px rgba(0,0,0,0.05);
  }

  nav {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0.75rem var(--section-padding-left) 0.75rem var(--section-padding-right);
    max-width: 1400px;
    margin: 0 auto;
    min-height: 60px;
  }

  .logo {
    display: flex;
    align-items: center;
    height: 32px;
  }

  .logo img {
    height: 100%;
    width: auto;
    display: block;
    max-width: 120px;
  }

  .nav-links {
    display: none;
    gap: 1.5rem;
    list-style: none;
  }

  .nav-links a {
    text-decoration: none;
    color: var(--text-dark);
    font-weight: 500;
    transition: color 0.3s;
    min-height: var(--min-touch-target);
    display: flex;
    align-items: center;
  }

  .nav-links a:hover {
    color: var(--brand-blue);
    transition: color 0.3s;
  }

  .cta-button {
    padding: 0.625rem 1.5rem;
    background: var(--gradient-primary);
    color: white;
    border: none;
    border-radius: 50px;
    font-weight: 600;
    cursor: pointer;
    transition: transform 0.3s, box-shadow 0.3s;
    text-decoration: none;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    min-height: var(--min-touch-target);
  }

  .cta-button:hover {
    transform: translateY(-2px);
    box-shadow: var(--shadow-hover);
  }

  .mobile-menu {
    display: flex;
    align-items: center;
    justify-content: center;
    background: none;
    border: none;
    font-size: 1.5rem;
    cursor: pointer;
    color: var(--text-dark);
    min-height: var(--min-touch-target);
    min-width: var(--min-touch-target);
  }

  .mobile-menu:hover {
    color: var(--brand-blue);
  }

  /* Mobile Navigation Overlay */
  .mobile-nav-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100vh;
    background: rgba(255, 255, 255, 0.98);
    backdrop-filter: blur(20px);
    z-index: 1001;
    transform: translateX(-100%);
    transition: transform 0.3s ease-in-out;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 2rem;
  }

  .mobile-nav-overlay.active {
    transform: translateX(0);
  }

  .mobile-close {
    position: absolute;
    top: 1rem;
    right: 1rem;
    background: none;
    border: none;
    font-size: 2rem;
    cursor: pointer;
    color: var(--text-dark);
    min-height: var(--min-touch-target);
    min-width: var(--min-touch-target);
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .mobile-nav-links {
    list-style: none;
    text-align: center;
    gap: 1.5rem;
    display: flex;
    flex-direction: column;
  }

  .mobile-nav-links a {
    text-decoration: none;
    color: var(--text-dark);
    font-weight: 600;
    font-size: 1.25rem;
    transition: color 0.3s;
    min-height: var(--min-touch-target);
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .mobile-nav-links a:hover {
    color: var(--brand-blue);
  }

  /* Tablet Portrait (768px+) */
  @media (min-width: 768px) {
    nav {
      padding: 1.25rem var(--section-padding-left) 1.25rem var(--section-padding-right);
    }

    .logo {
      height: 40px;
    }

    .logo img {
      max-width: 160px;
    }

    .nav-links {
      display: flex;
      gap: 1.5rem;
    }

    .mobile-menu {
      display: none;
    }

    .cta-button {
      padding: 0.75rem 2rem;
    }
  }

  /* Desktop (1024px+) */
  @media (min-width: 1024px) {
    .nav-links {
      gap: 2rem;
    }
  }

  /* Large screens (600px+) */
  @media (min-width: 600px) {
    nav {
      padding: 1rem var(--section-padding-left) 1rem var(--section-padding-right);
    }

    .logo {
      height: 36px;
    }

    .logo img {
      max-width: 140px;
    }

    .cta-button {
      padding: 0.75rem 1.75rem;
      font-size: 1rem;
    }
  }
</style>

<script>
  // Mobile menu functionality
  function initMobileMenu() {
    const mobileMenuButton = document.getElementById('mobileMenuButton');
    const mobileCloseButton = document.getElementById('mobileCloseButton');
    const mobileNavOverlay = document.getElementById('mobileNavOverlay');

    if (mobileMenuButton && mobileNavOverlay && mobileCloseButton) {
      mobileMenuButton.addEventListener('click', () => {
        mobileNavOverlay.classList.add('active');
      });

      mobileCloseButton.addEventListener('click', () => {
        mobileNavOverlay.classList.remove('active');
      });

      // Close mobile menu when clicking on overlay
      mobileNavOverlay.addEventListener('click', (e) => {
        if (e.target === mobileNavOverlay) {
          mobileNavOverlay.classList.remove('active');
        }
      });

      // Close mobile menu when clicking on a link
      const mobileNavLinks = mobileNavOverlay.querySelectorAll('a');
      mobileNavLinks.forEach(link => {
        link.addEventListener('click', () => {
          mobileNavOverlay.classList.remove('active');
        });
      });
    }
  }

  // Initialize on DOM ready
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initMobileMenu);
  } else {
    initMobileMenu();
  }
</script>
