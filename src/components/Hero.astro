---
export interface Props {
  title: string;
  subtitle: string;
  inputPlaceholder: string;
  buttonText: string;
}

const { title, subtitle, inputPlaceholder, buttonText } = Astro.props;
---

<section class="hero">
  <div class="hero-content">
    <h1 class="hero-title" set:html={title}></h1>
    <p class="hero-subtitle">{subtitle}</p>
    <div class="hero-input-group">
      <input
        type="url"
        placeholder={inputPlaceholder}
        class="hero-input"
        aria-label="Website URL"
      />
      <button class="hero-button">{buttonText}</button>
    </div>
  </div>
</section>

<style>
  .hero {
    padding: calc(80px + var(--section-padding-y)) var(--section-padding-left) var(--section-padding-y) var(--section-padding-right);
    text-align: center;
    background: linear-gradient(180deg, #f7fafc 0%, #ffffff 100%);
    position: relative;
    overflow: hidden;
  }

  .hero-content {
    max-width: 900px;
    margin: 0 auto;
  }

  .hero-title {
    font-size: clamp(2rem, 5vw, 3.5rem);
    line-height: 1.2;
    margin-bottom: 1.5rem;
    font-weight: 700;
  }

  .hero-title :global(.highlight) {
    background: var(--gradient-primary);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  .hero-subtitle {
    font-size: clamp(1.1rem, 2vw, 1.5rem);
    color: var(--text-light);
    margin-bottom: 2.5rem;
    line-height: 1.6;
  }

  .hero-input-group {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    max-width: 600px;
    margin: 0 auto;
  }

  .hero-input {
    padding: 1rem 1.5rem;
    border: 2px solid #e2e8f0;
    border-radius: 50px;
    font-size: 1rem;
    transition: border-color 0.3s;
    width: 100%;
  }

  .hero-input:focus {
    outline: none;
    border-color: var(--brand-blue);
  }

  .hero-button {
    padding: 1rem 2.5rem;
    background: var(--gradient-primary);
    color: white;
    border: none;
    border-radius: 50px;
    font-size: 1.1rem;
    font-weight: 600;
    cursor: pointer;
    transition: transform 0.3s, box-shadow 0.3s;
  }

  .hero-button:hover {
    transform: translateY(-2px);
    box-shadow: var(--shadow-hover);
  }

  @media (min-width: 640px) {
    .hero-input-group {
      flex-direction: row;
    }

    .hero-input {
      flex: 1;
    }

    .hero-button {
      white-space: nowrap;
    }
  }
</style>
